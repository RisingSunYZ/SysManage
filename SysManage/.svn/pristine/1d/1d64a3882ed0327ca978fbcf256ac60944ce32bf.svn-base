package com.hfmx.control.book;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.apache.commons.lang3.StringUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.annotation.Scope;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import com.hfmx.bean.Tree;
import com.hfmx.control.base.BaseController;
import com.hfmx.formmodel.FBook;
import com.hfmx.model.TBook;
import com.hfmx.pagemodel.PBook;
import com.hfmx.service.book.IBookService;
import com.hfmx.utils.AjaxMsg;
import com.hfmx.utils.DataGrid;
import com.hfmx.utils.PageInfo;

@Controller
@Scope("prototype")
@RequestMapping("/book")
public class BookControl extends BaseController {
	@Autowired
	public IBookService bookService;

	@RequestMapping(value = "/list.do")
	public String list() {
		return "book/list";
	}

	@RequestMapping(value = "/forwardadd.do")
	public String forwardadd() {
		return "book/add";
	}

	@RequestMapping(value = "/forwardedit/{id}.do")
	public String forwardedit(HttpServletRequest request, @PathVariable("id") int id) {
		TBook tBook = bookService.search(TBook.class, id);
		FBook fBook;
		AjaxMsg message;
		if (tBook == null) {
			fBook = null;
			message = new AjaxMsg(false, "修改的图书不存在！");
		} else {
			fBook = new FBook(tBook);
			message = new AjaxMsg(true, "");
		}
		request.setAttribute("fBook", fBook);
		request.setAttribute("AjaxMsg", message);
		return "book/edit";
	}

	@RequestMapping(value = "/show/{id}.do")
	public String show(HttpServletRequest request, @PathVariable("id") int id) {
		TBook tBook = bookService.search(TBook.class, id);
		FBook fBook;
		AjaxMsg message;
		if (tBook == null) {
			fBook = null;
			message = new AjaxMsg(false, "查看的图书不存在！");
		} else {
			fBook = new FBook(tBook);
			message = new AjaxMsg(true, "");
		}
		request.setAttribute("fBook", fBook);
		request.setAttribute("AjaxMsg", message);
		return "book/show";
	}

	@RequestMapping(value = "/grid.do")
	public void listgrid(PageInfo pageInfo, HttpServletResponse response) {
		DataGrid<PBook> list = bookService.getlist(pageInfo);
		this.writeJson(response, list);
	}

	@RequestMapping(value = "/cmb.do")
	public void cmb(HttpServletResponse response) {
		List<TBook> list = bookService.search(TBook.class, "select * from book");
		this.writeJson(response, list);
	}

	@RequestMapping(value = "/codecmb.do")
	public void codecmb(HttpServletResponse response) {
		List<HashMap<String, String>> list = new ArrayList<HashMap<String, String>>();
		for (int i = 0; i < 10; i++)
			for (int j = i; j < 10; j++) {
				HashMap<String, String> map = new HashMap<String, String>();
				map.put("code", "HYGT" + String.valueOf(i) + String.valueOf(j));
				map.put("text", "图书编号: HYGT" + String.valueOf(i) + String.valueOf(j));
				list.add(map);
			}
		this.writeJson(response, list);
	}

	@RequestMapping(value = "/modelcmb.do")
	public void modelcmb(HttpServletResponse response) {
		List<Tree> trees = new ArrayList<Tree>();
		for (int i = 0; i < 5; i++) {
			Tree model = new Tree();
			model.setId("model_" + String.valueOf(i));
			model.setText("model_" + String.valueOf(i));
			for (int j = 0; j < 5; j++) {
				Tree child = new Tree();
				child.setId("model_" + String.valueOf(i) + String.valueOf(j));
				child.setText("model_" + String.valueOf(i) + String.valueOf(j));
				model.getChildren().add(child);
			}
			trees.add(model);
		}
		this.writeJson(response, trees);
	}

	@RequestMapping(value = "/add.do")
	public void add(@ModelAttribute("fBook") FBook fBook, HttpServletResponse response) {
		AjaxMsg message;
		if (fBook != null) {
			TBook book = fBook.getBook(new TBook());
			bookService.save(book);
			message = new AjaxMsg(true, "添加成功！");
		} else
			message = new AjaxMsg(false, "添加失败！");
		this.writeJson(response, message);
	}

	@RequestMapping(value = "/edit.do")
	public void edit(@ModelAttribute("fBook") FBook fBook, HttpServletResponse response) {
		AjaxMsg message;
		if (fBook != null && StringUtils.isNotBlank(fBook.getId())) {
			TBook book = bookService.search(TBook.class, Integer.valueOf(fBook.getId()));
			if (book != null) {
				book = fBook.getBook(book);
				bookService.update(book);
				message = new AjaxMsg(true, "修改成功！");
			} else
				message = new AjaxMsg(false, "选择的记录不存在！");
		} else
			message = new AjaxMsg(false, "请选择一条记录！");
		this.writeJson(response, message);
	}

	@RequestMapping(value = "/delete/{ids}.do")
	public void delete(@PathVariable("ids") String ids, HttpServletResponse response) {
		AjaxMsg message;
		if (StringUtils.isNotBlank(ids)) {
			String[] idsString = ids.split(",");
			Integer[] idlist = new Integer[idsString.length];
			for (int i = 0; i < idsString.length; i++) {
				idlist[i] = Integer.parseInt(idsString[i]);
			}
			bookService.delete(TBook.class, idlist);
			message = new AjaxMsg(true, "删除成功！");
		} else
			message = new AjaxMsg(false, "请选择需要删除的记录！");
		this.writeJson(response, message);
	}
}
