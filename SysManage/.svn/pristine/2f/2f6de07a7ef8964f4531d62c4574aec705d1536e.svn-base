package com.hfmx.service.book.impl;

import javax.annotation.Resource;

import org.apache.commons.lang3.StringUtils;
import org.springframework.stereotype.Component;
import org.springframework.transaction.annotation.Transactional;

import com.hfmx.dao.book.IBookDao;
import com.hfmx.formmodel.FBook;
import com.hfmx.model.TBook;
import com.hfmx.service.book.IBookManageService;
import com.hfmx.utils.AjaxMsg;

@Component("bookManage")
@Transactional
public class BookManageServiceImpl implements IBookManageService {
	@Resource(name = "bookDao")
	private IBookDao dao;

	/**
	 * 添加
	 */
	public AjaxMsg add(FBook f) {
		AjaxMsg msg;
		if (f != null) {
			TBook tmodel = f.fillTmodel(new TBook());
			try {
				dao.save(tmodel);
				msg = new AjaxMsg(true, "添加成功！");
			} catch (Exception e) {
				msg = new AjaxMsg(false, "添加出错！");
			}
		} else
			msg = new AjaxMsg(false, "添加数据未获取到！");
		return msg;
	}

	/**
	 * 修改
	 */
	public AjaxMsg update(FBook f) {
		AjaxMsg msg;
		if (f != null) {
			if (StringUtils.isNotBlank(f.getId())) {
				TBook tmodel = this.find(Integer.valueOf(f.getId()));
				if (tmodel != null) {
					tmodel = f.fillTmodel(tmodel);
					try {
						dao.update(tmodel);
						msg = new AjaxMsg(true, "修改成功！");
					} catch (Exception e) {
						msg = new AjaxMsg(false, "修改出错！");
					}
				} else
					msg = new AjaxMsg(false, "选择的记录不存在！");
			} else
				msg = new AjaxMsg(false, "请选择一条需要修改的记录！");
		} else
			msg = new AjaxMsg(false, "修改数据未获取到！");
		return msg;
	}

	/**
	 * 删除
	 */
	public AjaxMsg delete(String ids) {
		AjaxMsg msg;
		if (StringUtils.isNotBlank(ids)) {
			String[] idsString = ids.split(",");
			Integer[] idlist = new Integer[idsString.length];
			for (int i = 0; i < idsString.length; i++) {
				idlist[i] = Integer.parseInt(idsString[i].trim());
			}
			try {
				dao.delete(TBook.class, idlist);
				msg = new AjaxMsg(true, "删除成功！");
			} catch (Exception e) {
				msg = new AjaxMsg(false, "删除出错！");
			}
		} else
			msg = new AjaxMsg(false, "请选择需要删除的记录！");
		return msg;
	}

	/**
	 * 获取实体类
	 */
	public TBook find(int id) {
		try {
			return dao.search(TBook.class, id);
		} catch (Exception e) {
			return null;
		}
	}

	/**
	 * 获取fmodel
	 */
	public FBook findForm(int id) {
		TBook tmodel = this.find(id);
		if (tmodel != null)
			return new FBook(tmodel);
		else
			return null;
	}
}
