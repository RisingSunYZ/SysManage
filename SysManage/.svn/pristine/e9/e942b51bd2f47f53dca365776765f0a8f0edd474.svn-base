package com.hfmx.control.book;

import java.util.Date;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.annotation.Scope;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import com.hfmx.bean.AjaxMsg;
import com.hfmx.bean.DataGrid;
import com.hfmx.bean.PageInfo;
import com.hfmx.bean.book.Book;
import com.hfmx.beanform.book.BookBeanForm;
import com.hfmx.beanlist.book.BookBeanList;
import com.hfmx.service.book.IBookService;

@Controller
@Scope("prototype")
@RequestMapping("/book")
public class BookControl {
	@Autowired
	public IBookService bookService;

	@RequestMapping(value = "/list.do")
	public String list() {
		return "book/list";
	}

	@RequestMapping(value = "/grid.do")
	@ResponseBody
	public DataGrid<BookBeanList> listgrid(PageInfo pageInfo) {
		long total = bookService.count("select count(*) from book");// 总记录数
		List<BookBeanList> list = bookService.getlistBySQL(
				"select * from book", pageInfo);
		return new DataGrid<BookBeanList>(total, list);
	}

	@RequestMapping(value = "/cmb.do")
	@ResponseBody
	public List<Book> cmb() {
		return bookService.search(Book.class, "select * from book");
		// return bookService.search("from Book", null);
	}

	@RequestMapping(value = "/add.do")
	@ResponseBody
	public AjaxMsg add(@ModelAttribute("bookform") BookBeanForm bookform) {
		if (bookform != null) {
			Book book = new Book();
			book.setName(bookform.getName());
			book.setCode(bookform.getCode());
			book.setModel(bookform.getModel());
			book.setBaseprice(bookform.getBaseprice());
			book.setMarketprice(bookform.getMarketprice());
			book.setSellprice(bookform.getSellprice());
			book.setSellcount(bookform.getSellcount());
			book.setClickcount(0);
			book.setCreatedate(new Date());
			book.setWeight(bookform.getWeight());
			book.setDescription(bookform.getDescription());
			bookService.save(book);
			return new AjaxMsg(true, "添加成功！");
		}
		return new AjaxMsg(false, "添加失败！");
	}

	@RequestMapping(value = "/editload/{id}.do")
	@ResponseBody
	public BookBeanForm editload(@PathVariable("id") int id) {
		return new BookBeanForm(bookService.search(Book.class, id));
	}

	@RequestMapping(value = "/edit.do")
	@ResponseBody
	public AjaxMsg edit(@ModelAttribute("bookform") BookBeanForm bookform) {
		if (bookform != null && bookform.getId() > 0) {
			Book book = bookService.search(Book.class, bookform.getId());
			if (book != null) {
				book.setName(bookform.getName());
				book.setCode(bookform.getCode());
				book.setModel(bookform.getModel());
				book.setBaseprice(bookform.getBaseprice());
				book.setMarketprice(bookform.getMarketprice());
				book.setSellprice(bookform.getSellprice());
				book.setSellcount(bookform.getSellcount());
				book.setClickcount(0);
				book.setCreatedate(new Date());
				book.setWeight(bookform.getWeight());
				book.setDescription(bookform.getDescription());
				bookService.update(book);
				return new AjaxMsg(true, "修改成功！");
			} else
				return new AjaxMsg(false, "选择的记录不存在！");
		}
		return new AjaxMsg(false, "请选择一条记录！");
	}
}
