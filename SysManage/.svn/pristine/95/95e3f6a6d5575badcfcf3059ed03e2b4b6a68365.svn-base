package com.hfmx.control.upload;

import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.UUID;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.commons.lang3.StringUtils;
import org.apache.commons.lang3.time.DateFormatUtils;
import org.springframework.context.annotation.Scope;
import org.springframework.stereotype.Controller;
import org.springframework.util.FileCopyUtils;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.multipart.MultipartHttpServletRequest;

import com.hfmx.control.base.BaseController;
import com.hfmx.exception.BusinessException;

@Controller
@Scope("prototype")
@RequestMapping("/upload")
public class UploadControl extends BaseController {
	/** 临时保存路径 **/
	private static final String UPLOADDIR = "file/template/";

	@RequestMapping(value = "/forwardupload.do")
	public String forwardupload() {
		return "upload/test";
	}

	@RequestMapping(value = "/up.do")
	public void up(HttpServletRequest request, HttpServletResponse response) throws Exception {
		MultipartHttpServletRequest multipartRequest = (MultipartHttpServletRequest) request;
		Map<String, MultipartFile> fileMap = multipartRequest.getFileMap();
		// 存储fileUrl
		List<String> uploadPaths = new ArrayList<String>();
		String fileUrl = null;
		for (Map.Entry<String, MultipartFile> entity : fileMap.entrySet()) {
			String path = savefile(request, entity.getValue());
			if (StringUtils.isNotBlank(path)) {
				uploadPaths.add(path);
				fileUrl = path;
			}
		}
		Map<String, Object> resurlt = new HashMap<String, Object>();
		resurlt.put("fileUrl", fileUrl);
		this.writeJson(response, resurlt);
	}

	/**
	 * 上传文件
	 * 
	 * @param request
	 * @param file
	 * @return
	 * @throws Exception
	 */
	private String savefile(HttpServletRequest request, MultipartFile file) throws Exception {
		// 上传后文件路径
		String path = "";
		if (file != null) {
			// 临时文件路径
			String uploadDir = request.getSession().getServletContext().getRealPath("/") + UploadControl.UPLOADDIR;
			uploadDir += DateFormatUtils.format(new Date(), "yyyyMM") + "/";
			File filedir = new File(uploadDir);
			if (!filedir.exists()) {
				// 创建文件夹要用 file.mkdirs(),不能用 file.mkdir(),否则在linux下运行失败
				filedir.mkdirs();
			}
			String fileName = file.getOriginalFilename();// 原始文件名
			String newfilename = UUID.randomUUID().toString() + fileName.substring(fileName.lastIndexOf("."));// 新文件名
			path = uploadDir + newfilename;
			File uploadFile = new File(uploadDir + newfilename);
			try {
				FileCopyUtils.copy(file.getBytes(), uploadFile);
			} catch (IOException e) {
				throw new BusinessException("文件上传失败!");
			}
		}
		return path;
	}
}
