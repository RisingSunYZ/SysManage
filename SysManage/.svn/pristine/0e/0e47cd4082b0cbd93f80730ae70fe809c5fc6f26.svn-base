package com.hfmx.service.base.impl;

import java.io.Serializable;
import java.util.List;
import java.util.Map;

import javax.annotation.Resource;

import org.springframework.stereotype.Component;
import org.springframework.transaction.annotation.Transactional;

import com.hfmx.dao.base.IBaseDao;
import com.hfmx.service.base.IBaseService;

@Component("baseServiceImpl")
@Transactional
public class BaseServiceImpl<T, ID extends Serializable> implements
		IBaseService<T, ID> {
	private IBaseDao<T, ID> baseDaoImpl;

	public IBaseDao<T, ID> getBaseDaoImpl() {
		return baseDaoImpl;
	}

	@Resource(name = "baseDaoImpl")
	public void setBaseDaoImpl(IBaseDao<T, ID> baseDaoImpl) {
		this.baseDaoImpl = baseDaoImpl;
	}

	/**
	 * 保存实体
	 */
	public void save(T entity) {
		this.baseDaoImpl.save(entity);
	}

	/**
	 * 删除实体
	 */
	public void delete(T entity) {
		this.baseDaoImpl.delete(entity);
	}

	/**
	 * 单一删除
	 */
	public void delete(Class<T> entityClass, ID id) {
		this.baseDaoImpl.delete(entityClass, id);
	}

	/**
	 * 根据集合删除
	 */
	public void delete(Class<T> entityClass, ID[] ids) {
		this.baseDaoImpl.delete(entityClass, ids);
	}

	/**
	 * 更新实体
	 */
	public void update(T entity) {
		this.baseDaoImpl.update(entity);
	}

	/**
	 * 通过HQL更新实体
	 */
	public int update(String hql, Map<String, Object> params) {
		return this.baseDaoImpl.update(hql, params);
	}

	/**
	 * 通过SQL更新实体
	 */
	public int update(String sql) {
		return this.baseDaoImpl.update(sql);
	}

	/**
	 * 通过实体ID查询
	 */
	public T search(Class<T> entityClass, ID id) {
		return this.baseDaoImpl.search(entityClass, id);
	}

	/**
	 * 通过HQL语句查询
	 */
	public List<T> search(String hql, Map<String, Object> params) {
		return this.baseDaoImpl.search(hql, params);
	}

	/**
	 * 通过SQL语句查询
	 */
	public List<T> search(Class<T> entityClass, String sql) {
		return this.baseDaoImpl.search(entityClass, sql);
	}

	/**
	 * 统计数量
	 */
	public long count(Class<T> entityClass) {
		return this.baseDaoImpl.count(entityClass);
	}

	/**
	 * 根据HQL语句统计数量
	 */
	public long count(String hql, Map<String, Object> params) {
		return this.baseDaoImpl.count(hql, params);
	}

	/**
	 * 根据SQL语句统计数量
	 */
	public int count(String sql) {
		return this.baseDaoImpl.count(sql);
	}
}
