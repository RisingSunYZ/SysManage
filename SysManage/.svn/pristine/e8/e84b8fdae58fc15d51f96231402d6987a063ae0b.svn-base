package com.hfmx.control.upload;

import java.io.File;
import java.io.IOException;
import java.util.Date;
import java.util.Map;
import java.util.UUID;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.apache.commons.lang3.StringUtils;
import org.apache.commons.lang3.time.DateFormatUtils;
import org.springframework.context.annotation.Scope;
import org.springframework.stereotype.Controller;
import org.springframework.util.FileCopyUtils;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.multipart.MultipartHttpServletRequest;
import com.hfmx.control.base.BaseController;
import com.hfmx.exception.BusinessException;
import com.hfmx.utils.AjaxMsg;

@Controller
@Scope("prototype")
@RequestMapping("/upload")
public class UploadControl extends BaseController {
	/** 临时保存路径 **/
	private static final String UPLOADDIR = "file/template/";

	@RequestMapping(value = "/up.do")
	public void up(HttpServletRequest request, HttpServletResponse response) throws Exception {
		// 主路径
		String context = request.getSession().getServletContext().getRealPath("/");
		// 临时文件路径
		String uploadDir = context + UploadControl.UPLOADDIR + DateFormatUtils.format(new Date(), "yyyyMM") + "/";
		// 上传后的路径
		String fileUrl = null;
		// 前台获取到的file集合
		Map<String, MultipartFile> fileMap = ((MultipartHttpServletRequest) request).getFileMap();
		// uploadfile是在前台定义的
		if (fileMap.containsKey("uploadfile"))
			fileUrl = savefile(request, fileMap.get("uploadfile"), uploadDir);
		if (StringUtils.isNotBlank(fileUrl))
			this.writeJson(response, new AjaxMsg(true, "上传成功", StringUtils.remove(fileUrl, context)));
		else
			this.writeJson(response, new AjaxMsg(false, "上传失败", null));
	}

	/**
	 * 上传文件
	 * 
	 * @param request
	 * @param file
	 * @return
	 * @throws Exception
	 */
	private String savefile(HttpServletRequest request, MultipartFile file, String uploadDir) throws Exception {
		// 上传后文件路径
		String path = "";
		if (file != null && StringUtils.isNotBlank(uploadDir)) {
			File filedir = new File(uploadDir);
			if (!filedir.exists()) {
				// 创建文件夹要用 file.mkdirs(),不能用 file.mkdir(),否则在linux下运行失败
				filedir.mkdirs();
			}
			String fileName = file.getOriginalFilename();// 原始文件名
			String newfilename = UUID.randomUUID().toString() + fileName.substring(fileName.lastIndexOf("."));// 新文件名
			path = uploadDir + newfilename;
			File uploadFile = new File(uploadDir + newfilename);
			try {
				FileCopyUtils.copy(file.getBytes(), uploadFile);
			} catch (IOException e) {
				throw new BusinessException("文件【" + fileName + "】上传失败!");
			}
		}
		return path;
	}
}
